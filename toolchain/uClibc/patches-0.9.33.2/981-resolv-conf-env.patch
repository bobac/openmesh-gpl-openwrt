Forwarded: not-needed
 Open Mesh specific requirement. Not an official way to have multiple
 resolv.conf

--- uClibc-0.9.33.2/libc/inet/resolv.c.orig	2013-11-04 15:55:53.359947700 +0100
+++ uClibc-0.9.33.2/libc/inet/resolv.c	2013-11-04 15:54:54.568949437 +0100
@@ -360,6 +360,9 @@
 #define ALIGN_BUFFER_OFFSET(buf) ((ALIGN_ATTR - ((size_t)buf % ALIGN_ATTR)) % ALIGN_ATTR)
 
 
+#define RESOLV_CONF_DFL "/etc/resolv.conf"
+#define RESOLV_CONF_ENV "RESOLV_CONF"
+
 /* Structs */
 struct resolv_header {
 	int id;
@@ -961,14 +964,24 @@
 	static uint32_t resolv_conf_mtime;
 
 	char szBuffer[MAXLEN_searchdomain];
+	char *resolv_file;
 	FILE *fp;
-	int i;
+	int ret, i;
 	sockaddr46_t sa;
 
+	resolv_file = getenv(RESOLV_CONF_ENV);
+	if (resolv_file) {
+		struct stat sb;
+		ret = stat(resolv_file, &sb);
+	}
+
+	if (!resolv_file || ret != 0)
+		resolv_file = RESOLV_CONF_DFL;
+
 	if (!__res_sync) {
 		/* Reread /etc/resolv.conf if it was modified.  */
 		struct stat sb;
-		if (stat("/etc/resolv.conf", &sb) != 0)
+		if (stat(resolv_file, &sb) != 0)
 			sb.st_mtime = 0;
 		if (resolv_conf_mtime != (uint32_t)sb.st_mtime) {
 			resolv_conf_mtime = sb.st_mtime;
@@ -982,7 +995,7 @@
 	__resolv_timeout = RES_TIMEOUT;
 	__resolv_attempts = RES_DFLRETRY;
 
-	fp = fopen("/etc/resolv.conf", "r");
+	fp = fopen(resolv_file, "r");
 #ifdef FALLBACK_TO_CONFIG_RESOLVCONF
 	if (!fp) {
 		/* If we do not have a pre-populated /etc/resolv.conf then
